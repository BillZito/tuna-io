[  {    "type": "get",    "url": "/api/isalive",    "title": "Check if server is running",    "name": "IsAlive",    "group": "Miscellaneous",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n\"I'm Alive\"",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\nFailed to connect to localhost port 3000: Connection refused",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server/src/routes/handlers.go",    "groupTitle": "Miscellaneous"  },  {    "type": "post",    "url": "/api/videos",    "title": "Create and store a new video",    "name": "CreateVideo",    "group": "Videos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title of video</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>Link to CDN URL where video is stored</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "hash",            "description": "<p>Hashed path to URL (for client routing)</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "author_id",            "description": "<p>Unique ID of video uploader</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "private",            "description": "<p>True/False, whether the video is private</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\nOK",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\nRedigo failed to create and store the video",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server/src/routes/handlers.go",    "groupTitle": "Videos"  },  {    "type": "get",    "url": "/api/videos/{url}",    "title": "Retrieve a stored video",    "name": "GetVideo",    "group": "Videos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>Link to CDN URL where video is stored</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"title\": \"44413\",\n  \"url\": \"new\",\n  \"hash\": \"testhash\",\n  \"author_id\": 1,\n  \"timestamp\": \"2016-11-12T17:17:19.308362547-08:00\",\n  \"private\": true,\n  \"likes\": null,\n  \"dislikes\": null\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\nredigo: nil return",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./server/src/routes/handlers.go",    "groupTitle": "Videos"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./doc/main.js",    "group": "_Users_chriswt_Documents_hackreactor_projects_tuna_io_doc_main_js",    "groupTitle": "_Users_chriswt_Documents_hackreactor_projects_tuna_io_doc_main_js",    "name": ""  }]
